<?php

namespace AppBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntity;

/**
 * AssistanceTransaction
 *
 * @ORM\Table(name="assistance_transaction")
 * @ORM\Entity(repositoryClass="AppBundle\Repository\AssistanceTransactionRepository")
 */
class AssistanceTransaction
{
    /**
     * @var int
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="trn_id", type="string", length=50)
     */
    private $trnId;

     /**
     * @var int
     *
     * @ORM\Column(name="assist_id", type="integer")
     */
    private $assistId;

    /**
     * @var int
     *
     * @ORM\Column(name="profile_id", type="integer")
     */
    private $profileId;

    /**
     * @var string
     *
     * @ORM\Column(name="client_name", type="string", length=255)
     */
    private $clientName;

    /**
     * @var string
     *
     * @ORM\Column(name="client_voter_name", type="string", length=255)
     */
    private $clientVoterName;

    /**
     * @var string
     *
     * @ORM\Column(name="municipality_name", type="string", length=150)
     */
    private $municipalityName;

    /**
     * @var string
     *
     * @ORM\Column(name="municipality_no", type="string", length=30)
     * @Assert\NotBlank()
     * 
     */
    private $municipalityNo;

    /**
     * @var string
     *
     * @ORM\Column(name="barangay_name", type="string", length=150)
     */
    private $barangayName;

    /**
     * @var string
     *
     * @ORM\Column(name="barangay_no", type="string", length=30)
     * @Assert\NotBlank()
     */
    private $barangayNo;

    /**
     * @var int
     *
     * @ORM\Column(name="pro_voter_id", type="integer")
     */
    private $proVoterId;

     /**
     * @var string
     *
     * @ORM\Column(name="pro_id_code", type="string", length=30)
     */
    private $proIdCode;

     /**
     * @var string
     *
     * @ORM\Column(name="generated_id_no", type="string")
     */
    private $generatedIdNo;

    /**
     * @var int
     *
     * @ORM\Column(name="is_non_voter", type="integer", scale=1)
     */
    private $isNonVoter;

     /**
     * @var string
     *
     * @ORM\Column(name="trans_desc", type="string", length=50)
     */
    private $transDesc;

      /**
     * @var string
     *
     * @ORM\Column(name="trans_type", type="string", length=50)
     */
    private $transType;

     /**
     * @var string
     *
     * @ORM\Column(name="trans_date", type="string", length=30)
     */
    private $transDate;

     /**
     * @var float
     *
     * @ORM\Column(name="amount", type="float", scale=2)
     */
    private $amount;    

     /**
     * @var datetime
     *
     * @ORM\Column(name="created_at", type="datetime")
     */
    private $createdAt;

    /**
     * @var string
     *
     * @ORM\Column(name="created_by", type="string", length=150)
     */
    private $createdBy;

     /**
     * @var datetime
     *
     * @ORM\Column(name="updated_at", type="datetime")
     */
    private $updatedAt;

    /**
     * @var string
     *
     * @ORM\Column(name="updated_by", type="string", length=150)
     */
    private $updatedBy;

    /**
     * @var string
     *
     * @ORM\Column(name="remarks", type="string", length=256)
     */
    private $remarks;

    /**
     * @var string
     *
     * @ORM\Column(name="status", type="string", length=3)
     * @Assert\NotBlank()
     */
    private $status;
}

