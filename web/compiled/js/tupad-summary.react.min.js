var TupadMunicipalitySummary = React.createClass({displayName: "TupadMunicipalitySummary",

    getInitialState: function () {
        return {
            records: []
        }
    },

    componentDidMount: function () {
        this.loadData(this.props.municipalityName);
    },

    loadData: function (municipalityName) {
        var self = this;

        self.requestMunicipality = $.ajax({
            url: Routing.generate("ajax_get_assistance_municipality_summary", { municipalityName : municipalityName }),
            type: "GET"
        }).done(function (res) {
            console.log("data has been received");
            console.log(res);
            self.setState({ records: res });
        }).fail(function () {
            self.setState({ records: [] });
        });
    },


    notify: function (message, color) {
        $.notific8('zindex', 11500);
        $.notific8(message, {
            heading: 'System Message',
            color: color,
            life: 5000,
            verticalEdge: 'right',
            horizontalEdge: 'top',
        });
    },

    numberWithCommas: function (x) {
        if (x != 0) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        } else {
            return "";
        }
    },

    render: function () {
        var self = this;

        var gDisplaced = 0;
        var gDisplacedDuplicates = 0;
        var gDisplacedNoId = 0;

        var gSlp = 0;
        var gSlpDuplicates = 0;
        var gSlpNoId = 0;

        var gEduc = 0;
        var gEducDuplicates = 0;
        var gEducNoId = 0;

        var gFood = 0;
        var gFoodDuplicates = 0;
        var gFoodNoId = 0;

        var gRecords = 0;
        var gDuplicates = 0;
        var gNoId = 0;


        return (
            React.createElement("div", null, 
                React.createElement("table", {className: "table table-bordered"}, 
                    React.createElement("thead", null, 
                        React.createElement("tr", null, 
                            React.createElement("th", {className: "text-center", rowSpan: "2"}, "MUNICIPALITY"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "TUPAD"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "SLP"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "EDUC"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "FOOD"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "TOTALS")
                        ), 
                        React.createElement("tr", null, 
                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id")
                        )
                    ), 
                    React.createElement("tbody", null, 
                        this.state.records.map(function (data) {
                            var displacedDuplicates = data.total_displaced - data.total_displaced_uniq;
                            var displacedNoId = data.total_displaced_uniq - data.total_displaced_w_id;
                            var slpDuplicates = data.total_slp - data.total_slp_uniq;
                            var slpNoId = data.total_slp_uniq - data.total_slp_w_id;
                            var educDuplicates = data.total_aics_educ - data.total_aics_educ_uniq;
                            var educNoId = data.total_aics_educ_uniq - data.total_aics_educ_w_id;
                            var foodDuplicates = data.total_aics_food - data.total_aics_food_uniq;
                            var foodNoId = data.total_aics_food_uniq - data.total_aics_food_w_id;

                            var totalRecords = parseInt(data.total_displaced) + parseInt(data.total_slp) + parseInt(data.total_aics_educ) + parseInt(data.total_aics_food);
                            var totalDuplicates = displacedDuplicates + slpDuplicates + educDuplicates + foodDuplicates;
                            var totalNoId = displacedNoId + slpNoId + educNoId + foodNoId;

                            gDisplaced += parseInt(data.total_displaced);
                            gDisplacedDuplicates += displacedDuplicates;
                            gDisplacedNoId += displacedNoId;

                            gSlp += parseInt(data.total_slp);
                            gSlpDuplicates += slpDuplicates;
                            gSlpNoId += slpNoId;

                            gEduc += parseInt(data.total_aics_educ);
                            gEducDuplicates += educDuplicates;
                            gEducNoId += educNoId;

                            gFood += parseInt(data.total_aics_food);
                            gFoodDuplicates += foodDuplicates;
                            gFoodNoId += foodNoId;


                            gRecords += totalRecords;
                            gDuplicates += totalDuplicates;
                            gNoId += totalNoId;

                            return (
                                React.createElement("tr", null, 
                                    React.createElement("td", {className: "text-center"}, data.source_barangay), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_displaced)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(displacedDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(displacedNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_slp)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(slpDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(slpNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_aics_educ)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(educDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(educNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_aics_food)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(foodDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(foodNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(totalRecords)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(totalDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(totalNoId))
                                )
                            )
                        }), 
                        React.createElement("tr", null, 
                            React.createElement("td", {className: "text-center"}, "TOTALS"), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDisplaced))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDisplacedDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDisplacedNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gSlp))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gSlpDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gSlpNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gEduc))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gEducDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gEducNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gFood))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gFoodDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gFoodNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gRecords))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gNoId)))
                        )
                    )
                )
            )
        )
    }
});

window.TupadMunicipalitySummary = TupadMunicipalitySummary;

var TupadProvinceSummary = React.createClass({displayName: "TupadProvinceSummary",

    getInitialState: function () {
        return {
            records: []
        }
    },

    componentDidMount: function () {
        this.loadData();
    },

    loadData: function () {
        var self = this;

        self.requestMunicipality = $.ajax({
            url: Routing.generate("ajax_get_assistance_summary"),
            type: "GET"
        }).done(function (res) {
            console.log("data has been received");
            console.log(res);
            self.setState({ records: res });
        }).fail(function () {
            self.setState({ records: [] });
        });
    },


    notify: function (message, color) {
        $.notific8('zindex', 11500);
        $.notific8(message, {
            heading: 'System Message',
            color: color,
            life: 5000,
            verticalEdge: 'right',
            horizontalEdge: 'top',
        });
    },

    numberWithCommas: function (x) {
        if (x != 0) {
            var parts = x.toString().split(".");
            parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            return parts.join(".");
        } else {
            return "";
        }
    },

    render: function () {
        var self = this;

        var gDisplaced = 0;
        var gDisplacedDuplicates = 0;
        var gDisplacedNoId = 0;

        var gSlp = 0;
        var gSlpDuplicates = 0;
        var gSlpNoId = 0;

        var gEduc = 0;
        var gEducDuplicates = 0;
        var gEducNoId = 0;

        var gFood = 0;
        var gFoodDuplicates = 0;
        var gFoodNoId = 0;

        var gRecords = 0;
        var gDuplicates = 0;
        var gNoId = 0;


        return (
            React.createElement("div", null, 
                React.createElement("table", {className: "table table-bordered"}, 
                    React.createElement("thead", null, 
                        React.createElement("tr", null, 
                            React.createElement("th", {className: "text-center", rowSpan: "2"}, "MUNICIPALITY"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "TUPAD"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "SLP"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "EDUC"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "FOOD"), 
                            React.createElement("th", {className: "text-center", colSpan: "3"}, "TOTALS")
                        ), 
                        React.createElement("tr", null, 
                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id"), 

                            React.createElement("th", {className: "text-center"}, "Records"), 
                            React.createElement("th", {className: "text-center"}, "Duplicates"), 
                            React.createElement("th", {className: "text-center"}, "No Id")
                        )
                    ), 
                    React.createElement("tbody", null, 
                        this.state.records.map(function (data) {
                            var displacedDuplicates = data.total_displaced - data.total_displaced_uniq;
                            var displacedNoId = data.total_displaced_uniq - data.total_displaced_w_id;
                            var slpDuplicates = data.total_slp - data.total_slp_uniq;
                            var slpNoId = data.total_slp_uniq - data.total_slp_w_id;
                            var educDuplicates = data.total_aics_educ - data.total_aics_educ_uniq;
                            var educNoId = data.total_aics_educ_uniq - data.total_aics_educ_w_id;
                            var foodDuplicates = data.total_aics_food - data.total_aics_food_uniq;
                            var foodNoId = data.total_aics_food_uniq - data.total_aics_food_w_id;

                            var totalRecords = parseInt(data.total_displaced) + parseInt(data.total_slp) + parseInt(data.total_aics_educ) + parseInt(data.total_aics_food);
                            var totalDuplicates = displacedDuplicates + slpDuplicates + educDuplicates + foodDuplicates;
                            var totalNoId = displacedNoId + slpNoId + educNoId + foodNoId;

                            gDisplaced += parseInt(data.total_displaced);
                            gDisplacedDuplicates += displacedDuplicates;
                            gDisplacedNoId += displacedNoId;

                            gSlp += parseInt(data.total_slp);
                            gSlpDuplicates += slpDuplicates;
                            gSlpNoId += slpNoId;

                            gEduc += parseInt(data.total_aics_educ);
                            gEducDuplicates += educDuplicates;
                            gEducNoId += educNoId;

                            gFood += parseInt(data.total_aics_food);
                            gFoodDuplicates += foodDuplicates;
                            gFoodNoId += foodNoId;


                            gRecords += totalRecords;
                            gDuplicates += totalDuplicates;
                            gNoId += totalNoId;

                            return (
                                React.createElement("tr", null, 
                                    React.createElement("td", {className: "text-center"}, data.source_municipality), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_displaced)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(displacedDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(displacedNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_slp)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(slpDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(slpNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_aics_educ)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(educDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(educNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(data.total_aics_food)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(foodDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(foodNoId)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(totalRecords)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(totalDuplicates)), 
                                    React.createElement("td", {className: "text-center"}, self.numberWithCommas(totalNoId))
                                )
                            )
                        }), 
                        React.createElement("tr", null, 
                            React.createElement("td", {className: "text-center"}, "TOTALS"), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDisplaced))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDisplacedDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDisplacedNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gSlp))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gSlpDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gSlpNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gEduc))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gEducDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gEducNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gFood))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gFoodDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gFoodNoId))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gRecords))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gDuplicates))), 
                            React.createElement("td", {className: "text-center"}, React.createElement("strong", null, self.numberWithCommas(gNoId)))
                        )
                    )
                )
            )
        )
    }
});

window.TupadProvinceSummary = TupadProvinceSummary;

var TupadSummaryComponent = React.createClass({displayName: "TupadSummaryComponent",

    getInitialState: function () {
        return {
            showCreateModal: false,
            municipalityName: null
        }
    },

    componentDidMount: function () {
        this.initSelect2();
    },


    initSelect2: function () {
        var self = this;

        $("#tupad_summary_component #municipality_select2").select2({
            casesentitive: false,
            placeholder: "Select City/Municipality",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_municipality'),
                data: function (params) {
                    return {
                        searchText: params.term,
                        provinceCode: 53
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.name, text: item.name };
                        })
                    };
                },
            }
        });

        $("#tupad_summary_component #municipality_select2").on("change", function () {
            self.setState({ municipalityName: $(this).val() });
        });
    },

    notify: function (message, color) {
        $.notific8('zindex', 11500);
        $.notific8(message, {
            heading: 'System Message',
            color: color,
            life: 5000,
            verticalEdge: 'right',
            horizontalEdge: 'top',
        });
    },

    render: function () {
        var self = this;

        console.log('ttest');
        console.log(this.state.municipalityName);

        return (
            React.createElement("div", {className: "portlet light portlet-fit bordered"}, 
                React.createElement("div", {className: "portlet-body", id: "tupad_summary_component"}, 
                    React.createElement("div", {className: "row"}, 
                        React.createElement("div", {className: "col-md-12"}, 
                            React.createElement("h2", null, "Assistance Summary")
                        ), 
                        React.createElement("br", null), 
                        React.createElement("div", {className: "col-md-2"}, 
                            React.createElement("label", null, "Breakdown by Municipality : "), 
                            React.createElement("select", {id: "municipality_select2", className: "form-control form-filter input-sm", name: "municipalityName"}
                            )
                        )
                    ), 
                    React.createElement("br", null), 
                    React.createElement("br", null), 
                    React.createElement("div", {className: "row"}, 
                        this.state.municipalityName != null ? React.createElement(TupadMunicipalitySummary, {municipalityName: this.state.municipalityName}) : React.createElement(TupadProvinceSummary, null)
                    )
                )
            )
        )
    }
});

setTimeout(function () {
    ReactDOM.render(
        React.createElement(TupadSummaryComponent, null),
        document.getElementById('page-container')
    );
}, 500);
