var FormGroup = ReactBootstrap.FormGroup
var HelpBlock = ReactBootstrap.HelpBlock;
var ControlLabel = ReactBootstrap.ControlLabel;
var FormControl = ReactBootstrap.FormControl;

var RemotePhotoUploadMonitoring = React.createClass({displayName: "RemotePhotoUploadMonitoring",

    notify: function (message, color) {
        $.notific8('zindex', 11500);
        $.notific8(message, {
            heading: 'System Message',
            color: color,
            life: 5000,
            verticalEdge: 'right',
            horizontalEdge: 'top',
        });
    },

    componentDidMount: function () {
        this.loadRecentUploads();
        this.loadUser(window.userId);
        this.initSelect2();
    },

    getInitialState: function () {
        return {
            voterGroup: null,
            municipalityName: null,
            brgyNo: null,
            showDatatable: false,
            summaryData: [],
            recentUploads: []
        };
    },

    loadUser: function (userId) {
        var self = this;

        self.requestUser = $.ajax({
            url: Routing.generate("ajax_get_user", { id: userId }),
            type: "GET"
        }).done(function (res) {
            self.setState({ user: res }, self.initSelect2);
        });
    },

    loadUploadSummary: function () {
        var self = this;

        console.log("test");

        self.requestUser = $.ajax({
            url: Routing.generate("ajax_get_remote_upload_summary_by_municipality", { voterGroup: self.state.voterGroup }),
            type: "GET"
        }).done(function (res) {
            console.log("summary data has been received");
            console.log(res);

            self.setState({ summaryData: res });
        });
    },


    loadRecentUploads: function () {
        var self = this;

        self.requestUser = $.ajax({
            url: Routing.generate("ajax_get_remote_upload_recent_upload"),
            type: "GET"
        }).done(function (res) {
            console.log("recent uploads has been received");
            console.log(res);

            self.setState({ recentUploads: res });
        });
    },

    initSelect2: function () {
        var self = this;

        $("#form-voter-group-select2").select2({
            casesentitive: false,
            placeholder: "Enter Category",
            allowClear: true,
            delay: 1500,
            width: '100%',
            containerCssClass: ':all:',
            ajax: {
                url: Routing.generate('ajax_select2_voter_group'),
                data: function (params) {
                    return {
                        searchText: params.term
                    };
                },
                processResults: function (data, params) {
                    return {
                        results: data.map(function (item) {
                            return { id: item.voter_group, text: item.voter_group };
                        })
                    };
                },
            }
        });

        $("#form-voter-group-select2").on("change", function () {
            self.setState({ "voterGroup": $(this).val() }, self.loadUploadSummary);
        });

        $("#form-voter-group-select2").empty()
            .append($("<option/>")
                .val('LPPP1')
                .text('LPPP1'))
            .trigger("change");
    },

    reloadDatatable: function () {
        console.log("reloading datatable");
        if (this.state.showDatatable)
            this.refs.fieldDatatable.reload();
    },

    render: function () {
        return (
            React.createElement("div", null, 
                React.createElement("div", {className: "row"}, 
                    React.createElement("div", {className: "col-md-8"}, 
                        React.createElement("div", {className: "portlet light portlet-fit bordered"}, 
                            React.createElement("div", {className: "portlet-body"}, 
                                React.createElement("div", {className: "row"}, 
                                    React.createElement("div", {className: "col-md-8"}, 
                                        React.createElement("h4", null, React.createElement("strong", null, "Upload Monitoring"))
                                    ), 
                                    React.createElement("div", {className: "col-md-4"}, 
                                        React.createElement(FormGroup, {controlId: "formVoterGroup"}, 
                                            React.createElement(ControlLabel, null, " Position : "), 
                                            React.createElement("select", {id: "form-voter-group-select2", className: "form-control input-sm"}
                                            )
                                        )
                                    )
                                ), 
                                React.createElement("br", null), 
                                React.createElement("div", {className: "table-container"}, 
                                    React.createElement("div", {className: "table-actions-wrapper"}
                                    ), 
                                    React.createElement("table", {id: "remote_photo_upload_table", className: "table table-striped table-bordered", width: "100%"}, 
                                        React.createElement("thead", {className: "bg-blue"}, 
                                            React.createElement("tr", null, 
                                                React.createElement("th", {className: "text-center"}, "No"), 
                                                React.createElement("th", {className: "text-center"}, "Municipality"), 
                                                React.createElement("th", {className: "text-center"}, "Total Uploads"), 
                                                React.createElement("th", {className: "text-center"}, "Total Downloads"), 
                                                React.createElement("th", {className: "text-center"}, "Pending Downloads")
                                            )
                                        ), 
                                        React.createElement("tbody", null, 
                                            
                                                this.state.summaryData.map(function (item, index) {
                                                    return (
                                                        React.createElement("tr", null, 
                                                            React.createElement("td", {className: "text-center"}, index + 1), 
                                                            React.createElement("td", {className: "text-center"}, item.municipality_name), 
                                                            React.createElement("td", {className: "text-center"}, item.total_photos), 
                                                            React.createElement("td", {className: "text-center"}, item.total_downloads), 
                                                            React.createElement("td", {className: "text-center"}, item.total_pending)
                                                        )
                                                    )
                                                }), 
                                            
                                            
                                                this.state.summaryData.length <= 0 ?
                                                    (
                                                        React.createElement("tr", null, 
                                                            React.createElement("th", {className: "text-center", colSpan: "5"}, "No upload records was found...")
                                                        )
                                                    )
                                                    :
                                                    null
                                            
                                        )
                                    )
                                )


                            )
                        )
                    ), 
                    React.createElement("div", {className: "col-md-4"}, 
                        React.createElement("div", {className: "portlet light portlet-fit bordered"}, 
                            React.createElement("div", {className: "portlet-body"}, 
                                React.createElement("h4", null, React.createElement("strong", null, "Recent Activities")), 
                                React.createElement("br", null), 

                                React.createElement("ul", null, 
                                    
                                        this.state.recentUploads.map(function (item) {
                                            return (
                                                React.createElement("li", null, 
                                                    "New ", React.createElement("strong", {className: "font-red"}, "  ", item.uploaded_photos, " "), " ", React.createElement("strong", null, item.voter_group, " "), "uploads from ", React.createElement("strong", {className: "font-blue"}, item.barangay_name, ", ", item.municipality_name), ". ", React.createElement("br", null), "  ", React.createElement("small", null, " By ", item.created_by, "  : ", item.created_at)
                                                ))
                                        }), 

                                    
                                    
                                        this.state.recentUploads.length <= 0 ?
                                            (
                                                React.createElement("li", {className: "text-center", colSpan: "1"}, "No recent uploads...")
                                            )
                                            :
                                            null
                                    
                                )

                            )
                        )

                    )
                )
            )
        )
    }
});

setTimeout(function () {
    ReactDOM.render(
        React.createElement(RemotePhotoUploadMonitoring, null),
        document.getElementById('page-container')
    );
}, 500);
